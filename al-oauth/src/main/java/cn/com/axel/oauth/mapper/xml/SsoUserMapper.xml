<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.axel.oauth.mapper.SsoUserMapper">
    <sql id="byAccount">
        (1!=1
        <if test="account != null and account != ''">
            or account = #{account}
            or phone = #{account}
            or email = #{account}
        </if>
        )
    </sql>
    <select id="getUserByAccount" resultType="cn.com.axel.common.oauth.entity.SsoUser">
        select * from sso_user
        <where>
            <include refid="byAccount"/>
        </where>
    </select>
    <!-- 系统租户下的信息允许查询 -->
    <sql id="roleFilter">
        and r.status = 0 and r.del_flag = 0
        <if test="tenantId!= null and tenantId != ''">
            and r.tenant_id = #{tenantId}
        </if>
    </sql>
    <sql id="orgFilter">
        AND o.status = 0 and o.del_flag = 0
        <if test="tenantId!= null and tenantId != ''">
            AND o.org_code like (SELECT concat(org_code,'%') FROM sso_org o where o.tenant_id = #{tenantId})
        </if>
    </sql>
    <select id="getUserRoles" resultType="cn.com.axel.common.oauth.api.entity.UserRole">
        select r.id, r.role_name, r.role_code, 0 source
        from sso_user u
        inner join sso_user_role ur on ur.user_id = u.id
        inner join sso_role r on r.id = ur.role_id
        <include refid="roleFilter"/>
        <where>
            u.id = #{userId}
        </where>
        union
        select r.id, r.role_name, r.role_code,1 source
        from sso_user u
        inner join sso_org_user ou on u.id = ou.user_id
        inner join sso_org o on o.id = ou.org_id
        <include refid="orgFilter"/>
        inner join sso_org_role sor on ou.org_id = sor.org_id
        INNER JOIN sso_role r on r.id = sor.role_id and r.status = 0 and r.del_flag = 0
        <where>
            u.id = #{userId}
        </where>
    </select>
    <sql id="userPerCondition">
        <where>
            u.id = #{userId}
            and m.permissions is not null
            and m.permissions != ''
        </where>
    </sql>
    <select id="getUserPermissions" resultType="java.lang.String">
        select DISTINCT u.permissions as permissions from (
        select u.id,m.permissions
        from sso_user u
        inner join sso_user_role ur on ur.user_id = u.id
        inner join sso_role r on r.id = ur.role_id
        <include refid="roleFilter"/>
        inner join sso_role_menu rm on rm.role_id = ur.role_id
        inner join sso_menu m on rm.menu_id = m.id
        <include refid="userPerCondition"/>
        union
        select u.id,m.permissions
        from sso_user u
        inner join sso_org_user ou on u.id = ou.user_id
        inner join sso_org o on o.id = ou.org_id
        <include refid="orgFilter"/>
        inner join sso_org_role sor on ou.org_id = sor.org_id
        inner join sso_role r on r.id = sor.role_id and r.del_flag = 0 and r.status = 0
        inner join sso_role_menu rm on rm.role_id = sor.role_id
        inner join sso_menu m on rm.menu_id = m.id
        <include refid="userPerCondition"/>
        ) u
    </select>
    <select id="getUserTenants" resultType="cn.com.axel.common.oauth.api.vo.TenantVo">
        SELECT t.*, su.account, IF(u.id = su.id, 1, 0) MASTER
        FROM sso_tenant t
                 JOIN sso_user u ON u.id = t.user_id and u.del_flag = 0 and u.status = 0
                 JOIN sso_org_user ou ON ou.user_id = u.id
                 JOIN sso_org o ON ou.org_id = o.id and o.tenant_id = t.id and o.del_flag = 0 and o.status = 0
            AND o.org_code IN (SELECT SUBSTR(org_code, 1, 5)
                               FROM sso_user u
                                        JOIN sso_org_user ou ON ou.user_id = u.id
                                   AND ou.user_id = #{userId}
                                        JOIN sso_org o ON o.id = ou.org_id and o.del_flag = 0 and o.status = 0)
                 LEFT JOIN sso_user su ON su.id = #{userId}
        where t.del_flag = 0
          and t.status = 0
        ORDER BY MASTER DESC
    </select>
    <select id="isAccountExist" resultType="java.lang.Integer">
        select count(0) from sso_user
        <where>
            <include refid="byAccount"/>
            <if test="userId != null and userId != ''">
                and id != #{userId}
            </if>
        </where>
    </select>
    <resultMap id="userMap" type="cn.com.axel.common.oauth.api.entity.UserInfo">
        <result property="roleIds" column="roleIds"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="roleNames" column="roleNames"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="orgIds" column="orgIds"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="orgNames" column="orgNames"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
    </resultMap>
    <resultMap id="ssoUserMap" type="cn.com.axel.common.oauth.entity.SsoUser">
        <result property="roleIds" column="roleIds"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="roleNames" column="roleNames"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="orgIds" column="orgIds"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
        <result property="orgNames" column="orgNames"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
    </resultMap>
    <sql id="selectUser">
        select u.id,u.account,u.phone,u.email,u.password,u.old_password,u.nickname,u.head_img_url
        ,u.telephone,u.birthday,u.sex,u.status,u.del_flag,u.salt,u.openid,u.remark,u.create_by
        ,u.create_time,u.update_by,u.update_time
         , GROUP_CONCAT(DISTINCT role_id) roleIds, GROUP_CONCAT(DISTINCT org_id) orgIds
        ,GROUP_CONCAT(DISTINCT role_name) roleNames, GROUP_CONCAT(DISTINCT org_name) orgNames
        from (select u.*, ou.org_id, ur.role_id,o.org_name,r.role_name
        from sso_user u
        left join sso_org_user ou on ou.user_id = u.id
        <choose>
            <when test="tenantId!= null and tenantId != ''">
                inner join
            </when>
            <otherwise>
                left join
            </otherwise>
        </choose>
        sso_org o on o.id = ou.org_id
        <include refid="orgFilter"/>
        left join sso_user_role ur on u.id = ur.user_id
        left join sso_role r on r.id = ur.role_id and r.del_flag = 0 and r.status = 0
        union
        select u.*, ou.org_id, sor.role_id,o.org_name,r.role_name
        from sso_user u
        join sso_org_user ou on ou.user_id = u.id
        join sso_org o on o.id = ou.org_id
        <include refid="orgFilter"/>
        join sso_org_role sor on sor.org_id = o.id
        join sso_role r on r.id = sor.role_id and r.del_flag = 0 and r.status = 0) u
    </sql>
    <select id="getUserById" resultMap="ssoUserMap">
        <include refid="selectUser"/>
        <where>
            u.id = #{userId}
        </where>
        group by u.id,u.account,u.phone,u.email,u.password,u.old_password,u.nickname,u.head_img_url
        ,u.telephone,u.birthday,u.sex,u.status,u.del_flag,u.salt,u.openid,u.remark,u.create_by
        ,u.create_time,u.update_by,u.update_time
    </select>
    <select id="getUserList" resultMap="userMap">
        <include refid="selectUser"/>
        <where>
            u.del_flag = 0
            <if test="orgId != null and orgId != ''">
                and u.id in (select u.id from sso_user u
                INNER JOIN sso_org_user ou ON ou.user_id = u.id
                inner JOIN sso_org o ON o.id = ou.org_id and o.del_flag = 0 and o.status = 0 and o.id = #{orgId}
                )
            </if>
            <if test="phone != null and phone != ''">
                and u.phone like concat('%',#{phone},'%')
            </if>
            <if test="account != null and account != ''">
                and u.account like concat('%',#{account},'%')
            </if>
            <if test="nickname != null and nickname != ''">
                and u.nickname like concat('%',#{nickname},'%')
            </if>
            <if test="status != null">
                and u.status = #{status}
            </if>
        </where>
        group by u.id,u.account,u.phone,u.email,u.password,u.old_password,u.nickname,u.head_img_url
        ,u.telephone,u.birthday,u.sex,u.status,u.del_flag,u.salt,u.openid,u.remark,u.create_by
        ,u.create_time,u.update_by,u.update_time
        order by u.create_time desc
    </select>
    <insert id="insertUserRole">
        insert into sso_user_role(role_id, user_id) values
        <foreach collection="roles" item="role" separator=",">
            (#{role},#{userId})
        </foreach>
    </insert>
    <insert id="insertUserRoleByRoleCode">
        INSERT into sso_user_role (select #{userId} user_id, id role_id
        from sso_role
        where role_code in
        <foreach collection="roles" item="roleCode" separator="," open="(" close=")">
            #{roleCode}
        </foreach>
        )
    </insert>
    <insert id="insertUserOrg">
        insert into sso_org_user(org_id, user_id) values
        <foreach collection="orgList" item="org" separator=",">
            (#{org},#{userId})
        </foreach>
    </insert>
    <delete id="deleteUserOrg">
        delete from sso_org_user
        <where>
            user_id = #{userId}
            <if test="orgList != null and orgList.size() > 0">
                and org_id in
                <foreach collection="orgList" item="orgId" separator="," open="(" close=")">
                    #{orgId}
                </foreach>
            </if>
        </where>
    </delete>
    <select id="isExistUserOrg" resultType="java.lang.Integer">
        select count(0)
        from sso_org_user
        where user_Id = #{userId}
          and org_id = #{orgId}
    </select>
    <select id="searchUserList" resultType="cn.com.axel.common.oauth.entity.SimpleUserInfo">
        select * from sso_user
        <where>
            <if test="condition != null and condition != ''">
                or account like CONCAT('%',#{condition},'%')
                or nickname like CONCAT('%',#{condition},'%')
                or phone like CONCAT('%',#{condition},'%')
            </if>
        </where>
    </select>
    <select id="getUserIdsByAccounts" resultType="java.lang.String">
        select id from sso_user where account in
        <foreach collection="accounts" item="account" separator="," open="(" close=")">
            #{account}
        </foreach>
    </select>
</mapper>