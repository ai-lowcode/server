<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.axel.oauth.mapper.SsoTenantMapper">
    <resultMap id="tenantMap" type="cn.com.axel.common.oauth.api.vo.TenantVo">
        <result property="roleIds" column="roleIds"
                typeHandler="cn.com.axel.oauth.handler.StrToListTypeHandler"/>
    </resultMap>
    <sql id="selectTenant">
        select t.id,t.tenant_type,t.name,t.city,t.province,t.county,t.address,t.corp_size,t.corp_years
               ,t.trade,t.status,t.logo,t.domain,t.del_flag,t.user_id,t.create_by,t.create_time,t.update_by,t.update_time
               , u.account, u.nickname, u.phone, 1 master, GROUP_CONCAT(DISTINCT r.id) roleIds
        from sso_tenant t
                 left join sso_user u on t.user_id = u.id
                 left join sso_org o on o.tenant_id = t.id and o.`status` = 0 and o.del_flag = 0
                 left join sso_org_role sor on sor.org_id = o.id
                 left join sso_role r on r.id = sor.role_id and r.`status` = 0 and r.del_flag = 0
    </sql>
    <select id="queryList" resultMap="tenantMap">
        <include refid="selectTenant"/>
        <where>
            t.del_flag = 0
            <if test="reqSsoTenant.tenantType!=null">and t.tenant_type = #{reqSsoTenant.tenantType}</if>
            <if test="reqSsoTenant.domain!=null">and t.domain = #{reqSsoTenant.domain}</if>
            <if test="reqSsoTenant.name!=null">and t.name = #{reqSsoTenant.name}</if>
        </where>
        group by t.id,t.tenant_type,t.name,t.city,t.province,t.county,t.address,t.corp_size,t.corp_years
        ,t.trade,t.status,t.logo,t.domain,t.del_flag,t.user_id,t.create_by,t.create_time,t.update_by,t.update_time
        , u.account, u.nickname, u.phone
        order by create_time desc
    </select>
    <select id="queryInfo" resultMap="tenantMap">
        <include refid="selectTenant"/>
        <where>
            t.del_flag = 0 and t.id = #{id}
        </where>
    </select>
    <select id="isTenantMasterOrg" resultType="java.lang.Integer">
        select count(0)
        from sso_tenant t
                 inner join sso_org o on o.tenant_id = t.id
        where t.user_id = #{userId}
          and o.id = #{orgId}
    </select>
    <select id="getTenantUser" resultType="java.lang.String">
        SELECT distinct u.id
        FROM sso_user u
                 INNER JOIN sso_org_user ou ON u.id = ou.user_id
                 INNER JOIN sso_org o ON o.id = ou.org_id AND o.del_flag = 0
            AND o.org_code LIKE (SELECT concat(org_code, '%')
                                 FROM sso_org o
                                 WHERE o.tenant_id = #{tenantId})
    </select>
    <select id="getTenantByOrgId" resultType="cn.com.axel.common.oauth.api.entity.SsoTenant">
        SELECT t.*
        FROM sso_tenant t
        INNER JOIN sso_org o ON t.id = o.tenant_id and o.del_flag = 0
        AND o.org_code in (SELECT SUBSTR(org_code, 1, 5)
        FROM sso_org o
        WHERE o.id in
        <foreach collection="orgIds" item="orgId" open="(" close=")" separator=",">
            #{orgId}
        </foreach>
        )
    </select>
    <select id="getTenantByRoleCode" resultType="cn.com.axel.common.oauth.api.vo.TenantVo">
        select t.*, u.account, u.nickname, u.phone, IF(u.id is null, 0, 1) master
        from sso_tenant t
                 INNER JOIN sso_user u on u.id = t.user_id
                 inner join sso_org o on o.tenant_id = t.id and o.status = 0 and o.del_flag = 0
                 inner join sso_org_role sor on sor.org_id = o.id
                 inner join sso_role r on r.id = sor.role_id and r.status = 0 and r.del_flag = 0
            and r.role_code = #{roleCode}
    </select>
</mapper>
